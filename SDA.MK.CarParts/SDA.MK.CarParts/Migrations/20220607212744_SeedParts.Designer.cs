// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SDA.MK.CarParts;

#nullable disable

namespace SDA.MK.CarParts.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220607212744_SeedParts")]
    partial class SeedParts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SDA.MK.CarParts.Models.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Baskets", (string)null);
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.BasketEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("PartId");

                    b.ToTable("BasketEntries", (string)null);
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.Part", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    b.ToTable("Parts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a8fb81b2-57df-47e6-bb71-0ccff622ed53"),
                            Name = "Head gasket",
                            Price = 100m
                        },
                        new
                        {
                            Id = new Guid("3f80271d-976f-476c-b888-9ecacc1d93e8"),
                            Name = "Spark plug",
                            Price = 60m
                        },
                        new
                        {
                            Id = new Guid("73555f97-1548-42af-966e-91f48847e029"),
                            Name = "Oil filter",
                            Price = 40m
                        },
                        new
                        {
                            Id = new Guid("88676fd8-276d-4915-aa73-bfd7b6a75584"),
                            Name = "Air filter",
                            Price = 15m
                        },
                        new
                        {
                            Id = new Guid("67b95dbb-c0dd-4d37-bfda-cfc44e51e628"),
                            Name = "Brake disc",
                            Price = 200m
                        },
                        new
                        {
                            Id = new Guid("415f4248-b2ef-4866-a3f8-7d926b11ca06"),
                            Name = "Brake pads",
                            Price = 85m
                        },
                        new
                        {
                            Id = new Guid("a04ec53e-6602-447f-8957-a9391adc0250"),
                            Name = "Shock absorber",
                            Price = 135m
                        },
                        new
                        {
                            Id = new Guid("947b2f45-537c-4230-b44e-bf729a4ae29a"),
                            Name = "Wiper blades",
                            Price = 70m
                        },
                        new
                        {
                            Id = new Guid("bdaf3a51-e4c3-449e-b3d1-b7c5ce7de391"),
                            Name = "Engine oil",
                            Price = 240m
                        });
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.Basket", b =>
                {
                    b.HasOne("SDA.MK.CarParts.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.BasketEntry", b =>
                {
                    b.HasOne("SDA.MK.CarParts.Models.Basket", null)
                        .WithMany("BasketEntries")
                        .HasForeignKey("BasketId");

                    b.HasOne("SDA.MK.CarParts.Models.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("SDA.MK.CarParts.Models.Basket", b =>
                {
                    b.Navigation("BasketEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
